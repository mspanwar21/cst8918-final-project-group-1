name: Terraform Lint & Plan

on:
  pull_request:
    branches: [ main ]
    paths:
      - "infra/**"
      - ".github/workflows/terraform-plan.yml"

permissions:
  id-token: write
  contents: read
  pull-requests: write

concurrency:
  group: terraform-plan-${{ github.ref }}
  cancel-in-progress: true

env:
  TF_IN_AUTOMATION: true

jobs:
  plan:
    runs-on: ubuntu-latest

    outputs:
      has_changes: ${{ steps.set_change_flag.outputs.has_changes }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure OIDC Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Setup tflint
        uses: terraform-linters/setup-tflint@v4

      - name: tflint
        working-directory: infra
        run: |
          tflint --version
          tflint -f compact

      - name: Cache .terraform
        uses: actions/cache@v4
        with:
          path: infra/.terraform
          key: tf-${{ runner.os }}-${{ hashFiles('infra/**/*.tf') }}
          restore-keys: |
            tf-${{ runner.os }}-

      - name: Terraform init
        working-directory: infra
        run: |
          terraform init -input=false
          # If you need backend config, add -backend-config lines here

      - name: Terraform plan
        id: plan
        working-directory: infra
        run: |
          set -e
          # detailed exit codes: 0 = no changes, 2 = changes, 1 = error
          terraform plan \
            -no-color \
            -input=false \
            -lock=true \
            -lock-timeout=5m \
            -out=tfplan || exitcode=$?
          exitcode=${exitcode:-0}
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          # Save human-readable plan too
          terraform show -no-color tfplan > tfplan.txt

      - name: Upload plan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.sha }}
          path: |
            infra/tfplan
            infra/tfplan.txt

      - name: Set change flag
        id: set_change_flag
        run: |
          if [ "${{ steps.plan.outputs.exitcode }}" = "2" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          elif [ "${{ steps.plan.outputs.exitcode }}" = "0" ]; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Terraform plan failed"; exit 1
          fi

      - name: PR summary & comment
        uses: actions/github-script@v7
        with:
          script: |
            const hasChanges = ${{ steps.set_change_flag.outputs.has_changes == 'true' ? 'true' : 'false' }};
            const body = hasChanges === 'true'
              ? `✅ **Plan succeeded** and **changes are detected**.\n\nArtifact: \`tfplan-${process.env.GITHUB_SHA}\` (includes \`tfplan\` & \`tfplan.txt\`).`
              : `✅ **Plan succeeded** and **no changes** were detected.\n\nNothing to apply.`;
            // Job summary
            core.summary.addHeading('Terraform Plan');
            core.summary.addRaw(body);
            await core.summary.write();
            // PR comment
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            })
