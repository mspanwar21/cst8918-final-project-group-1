name: Terraform Apply

on:
  push:
    branches: [ main ]
    paths:
      - "infra/**"
      - ".github/workflows/terraform-apply.yml"

permissions:
  id-token: write
  contents: read

concurrency:
  group: terraform-apply-prod
  cancel-in-progress: true

env:
  TF_IN_AUTOMATION: true

jobs:
  apply:
    runs-on: ubuntu-latest
    environment: production  # keeps the approval gate if you use it
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure OIDC Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform init
        working-directory: infra
        run: |
          terraform init \
            -input=false
          # If you need explicit backend config, add:
          # -backend-config="resource_group_name=${{ vars.TF_BACKEND_RG }}" \
          # -backend-config="storage_account_name=${{ vars.TF_BACKEND_STORAGE }}" \
          # -backend-config="container_name=${{ vars.TF_BACKEND_CONTAINER }}" \
          # -backend-config="key=${{ vars.TF_BACKEND_KEY }}"

      # If you use workspaces for envs, uncomment:
      # - name: Select workspace
      #   working-directory: infra
      #   run: |
      #     terraform workspace select prod || terraform workspace new prod

      - name: Terraform apply
        working-directory: infra
        run: |
          terraform apply \
            -auto-approve \
            -input=false \
            -lock=true \
            -lock-timeout=5m \
            -no-color
          # If you pass variables:
          # -var-file="prod.tfvars"